### LOG4J配置文件(上网找)
# 设置日志的级别 记录大于 DEBUG INFO WARN ERROR FATAL 等等级的信息
# 设置日志的输出位置
# console 控制台
# logfile文件 errorlogfile文件 下面进行相应设置就可以定义输出到多个文件
# MAIL
log4j.rootLogger=DEBUG,console,logfile,errorlogfile

## 输出到控制台
log4j.appender.console = org.apache.log4j.ConsoleAppender
log4j.appender.console.Target = System.out
log4j.appender.console.layout = org.apache.log4j.PatternLayout
# %c{1} 里面1旁边不能有空格 否则 log4j:ERROR Category option " 1 " not a decimal integer.
log4j.appender.console.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}:%L - %m%n

## 输出到日志文件
## DailyRollingFileAppender(不用设置MaxFileSize) 和 RollingFileAppender不一样
log4j.appender.logfile = org.apache.log4j.RollingFileAppender
# 这里的./是从工程目录开始算起 04ResultMap/logs/log.log
log4j.appender.logfile.File = ./logs/log.log
# 当日志文件大小超过MaxFileSize就会生成一个新的日志文件
# ===>日志切割
log4j.appender.logfile.MaxFileSize = 10MB
# log4j.appender.logfile.MaxBackupIndex = 3 # maxFileSize最多保存MaxBackupIndex个日志文件
# 输出DEBUG级别以上的日志
# logfile这个文件只保存DEBUG及以上级别的日志
log4j.appender.logfile.Threshold = DEBUG
log4j.appender.logfile.layout = org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}:%L - %m%n
# 使用追加的方式保存到日志文件 测试的时候可以设置为 false
log4j.appender.logfile.Append = false

# HTMLLayout才有LocationInfo
# log4j.appender.logfile.layout.LocationInfo = true
## 保存异常信息到单独文件 ##
log4j.appender.errorlogfile = org.apache.log4j.DailyRollingFileAppender
# 这里的./是从工程目录开始算起 04ResultMap/logs/error.log
log4j.appender.errorlogfile.File = ./logs/error.log
log4j.appender.errorlogfile.Append = false
# errorlogfile这个文件只保存ERROR及以上级别的日志
##只输出ERROR级别日志 [#????ERROR???????]
log4j.appender.errorlogfile.Threshold = ERROR
log4j.appender.errorlogfile.layout = org.apache.log4j.PatternLayout
log4j.appender.errorlogfile.layout.ConversionPattern = %d{ABSOLUTE} %5p %c{1}:%L - %m%n
log4j.appender.errorlogfile.DatePattern = ' . ' yyyy - MM - dd ' .log '

## 日志输出级别
log4j.logger.org.mybatis = DEBUG
log4j.logger.java.sql = DEBUG
log4j.logger.java.sql.Statement = DEBUG
log4j.logger.java.sql.ResultSet = DEBUG
log4j.logger.java.sql.PreparedStatement = DEBUG